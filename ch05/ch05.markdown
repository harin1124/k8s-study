# 볼륨, 마운트, 클레임을 이용한 데이터 퍼시스턴시

## 쿠버네티스에서 컨테이너 파일 시스템이 구축되는 과정
- 컨테이너 이미지가 파일 시스템의 초기 내용을 제공하고,<br>
  이 위에 컨테이너가 <span style="color:#DF5452">**기록 가능한 레이어(`writable layer`)**</span>가 얹어진다.
  - 이미지에 들어 있던 파일을 수정 또는 새로운 파일 기록하는 작업이 해당 레이어에서 일어난다.
  - 도커 이미지는 읽기 전용으로, 이미지에 있던 파일을 수정하는 것은<br>
    기록 가능 레이어에서 <span style="color:#DF5452">**해당 파일의 사본을 수정**</span>하는 것이다.
- 컨테이너의 가상 파일 시스템 구성에 외부 스토리지 참조하는 볼륨을 포함시킬 수 있다.
- 컨테이너에서 동작하는 애플리케이션에는 이런 레이어 구조가 드러나지 않고, <span style="color:#DF5452">**읽기 쓰기가 가능한 하나의 파일 시스템**</span>으로만 보인다.
- 만약 애플리케이션이 데이터를 기록할 필요가 있다면, 데이터 기록이 어떻게 이루어지는지 이해하고 그에 맞춰 파드를 정의해야 한다.<br>
  그렇지 않으면 파드가 재시작 하거나 새 파드로 대체될 때 데이터 손실이 발생한다.

### 기록 가능 레이어에 기록한 데이터 유실 시점
- 컨테이너 속에서 동작하던 애플리케이션이 문제가 발생하여 컨테이너가 종료되면, 대체할 새로운 파드가 생성된다.<br>
  새로운 컨테이너는 컨테이너 이미지의 내용과 <span style="color:#DF5452">**초기 상태의 기록 가능 레이어**</span>로 구성된 파일 시스템을 가진다.<br>
  즉, <span style="color:#DF5452">**기존 컨테이너가 기록 가능 레이어에 기록한 데이터는 유실**</span>된다.
<img src="./images/containerFileSystemDiagram.png" style="width:50%"/>

---

## 볼륨
- 컨테이너 파일 시스템은 컨피그맵이나 비밀값 등을 <span style="color:#DF5452">**특정 경로에 마운트하는 방식**</span>으로 확장할 수 있다.
- 볼륨도 컨테이너 파일 시스템을 구성하는 수단 중 하나로, 볼륨은 파드 수준에서 정의되고 읽기 전용 또는 쓰기 가능으로 설정할 수 있다.<br>
  또한 다른 유형의 스토리지로 백업될 수도 있다.<br>
  (ex. 파드가 실행 중인 노드의 디스크에서 네트워크 파일 시스템으로 데이터 백업)

---

## 공디렉터리(EmptyDir)
- 컨테이너 안에서 빈 디렉터리로 초기화되는 유형
- 파드 수준의 스토리지로, 이미지나 컨테이너 레이어에 속하지 않는다.
- 공디렉터리 볼륨에 저장된 데이터는 파드가 재시작되더라도 유지된다.
- 애플리케이션이 죽더라도 대체 컨테이너가 데이터를 이어 받아 캐시의 효과를 볼 수 있으므로, <span style="color:#DF5452">**로컬 캐시**</span>에 적합하다.
- 파드와 생애 주기를 함께 하여, 파드가 대체되어 새 파드를 만들면 처음 상태인 빈 디렉토리가 된다.

---

## 호스트경로(HostPath) 볼륨
- 파드에 정의되며 컨테이너 파일 시스템에 마운트되는 형태로 쓰인다.<br>
  컨테이너가 마운트 경로 디렉터리에 데이터를 기록하면, <span style="color:#DF5452">**실제 데이터는 노드의 디스크에 기록**</span>된다.