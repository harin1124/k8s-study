# 2. 파드와 디플로이먼트로 컨테이너 실행하기

## 컨테이너
- 컨테이너는 일반적으로 애플리케이션 구성 요소 하나를 실행하는 가상화된 환경을 말한다.
- 쿠버네티스가 직접 컨테이너를 실행하지 않는다.
- 컨테이너를 생성할 책임을 해당 노드에 설치된 컨테이너 런타임에 맡기는 형태이다.

## 파드
- 파드는 컴퓨팅의 단위로, 클러스터(cluster)를 이루는 노드 중 하나에서 실행된다.
- 쿠버네티스는 컨테이너를 또 다른 가상 환경인 파드로 감싼다.
- 쿠버네티스로 관리되는 **자신만의 가상 IP 주소**를 받고, 이러한 주소로 가상 네트워크에 접속된 다른 파트 또는 다른 노드에서 실행되는 파드라도 통신을 주고 받을 수 있다.
- 파드는 쿠버네티스에서 컴퓨팅의 최소단위이고 원시 타입 리소스로 파드를 직접 실행할 일은 없다.

### 컨테이너와 파드의 차이점
- 파드는 쿠버네티스가 관리하는 리소스고, 컨테이너는 쿠버네티스 외부에서 관리된다.

---

## 컨트롤러 객체
- 다른 리소스를 관리하는 쿠버네티스 리소스이다.
- 쿠버네티스 API와 연동하여 현재 시스템의 현재 상태를 감시하다가<br>
  '바람직한 상태'와 차이가 생기면 필요에 따라 차이를 바로잡는다.
- 레이블 셀렉터를 통해 자신이 관리하는 리소스인지 판단한다.
- 컨트롤러 객체가 만든 리소스의 삭제는 해당 컨트롤러 객체의 책임이다.<br>
  즉, 컨트롤러 객체는 자신이 관리하는 리소스의 생애 주기를 관리하고 외부 간섭을 허용하지 않는다.<br>
  컨트롤러 객체가 관리하는 리소스를 직접 삭제하면 대체하는 새로운 리소스를 생성한다.

## 디플로이먼트(Deployment) - 컨트롤러 객체
- **파드를 주로 관리**하는 컨트롤러 객체다.
- 만약 어떤 노드가 고장을 일으켜 파드가 유실될 경우, 디플로이먼트가 대체 파드를 다른 노드에 실행한다.
- 디플로이먼트를 생성하면 **디플로이먼트가 파드를 생성**하게 된다.

## 리소스에서의 레이블(Lable)
- 모든 쿠버네티스 리소스는 간단한 키-값 쌍 형태의 레이블을 가지고, 원하는 데이터를 담는 데 사용할 수 있다.
- 디플로이먼트와 파드의 관계처럼 객체 간 관계를 표현해 리소스와 리소스의 느슨한 연결을 만드는 데도 쓰인다.

---

## 다양한 사용법

### 네트워크 트래픽을 노드에서 파드로 전달하기
```shell
# 로컬 컴퓨터의 8088번 포트를 주시하다가, 해당 포트로 들어오는 트래픽을 파드의 80번 포트로 전달한다.
# => test-pod 는 웹 프로젝트로 포트 80으로 설정하였다고 가정해서 보면,
# => 클라이언트가 8088번 포트로 보내는 요청을 파드 80번 포트로 보낸다고 보면 된다.
kubectl port-forward pod/test-pod

# 브라우저에서 http://localhost:8080에 접근하면 확인할 수 있다.
```

### 파드의 로그 확인
```shell
# --tail=1            : 출력할 라인 수
# -n test             : 특정 네임스페이스에 할당할 경우 필요한 조건
# app=hello-kiamol-4  : 레이블 셀렉터로 선택하는 것 
kubectl logs --tail=1 -l app=hello-kiamol-4 -n test
```

### 컨테이너에서 로컬 컴퓨터로 파일 복사
- 양방향으로 파일 복사가 가능하여, 어플리케이션 문제 발생 시 확인에 유용하다.
```shell
# hello-kiamol-3 : 파드 명칭
# -n test        : 해당 파드가 위치한 네임스페이스 명
kubectl cp hello-kiamol-3:/usr/share/nginx/html/index.html /Users/path/index.html -n test
```